#!/usr/bin/env ruby -w

require 'json'
require 'erb'
require 'open3'

SERVICES = ['web', 'worker', 'admin']

require 'optparse'

#options = {}

subtext = <<HELP
Commonly used command are:
   create
See 'deploy COMMAND --help' for more information on a specific command.
HELP

global = OptionParser.new do |opts|
  opts.banner = "Usage: deploy [options] [subcommand [options]]"
  opts.on("-h", "--help") do
    puts subtext
    exit
  end
end
#end.parse!

create = {}

subcommands = { 
   'create' => OptionParser.new do |opts|
      opts.banner = "Usage: create [OPTIONS]"
      opts.on("-s", "--service [SERVICE]") do |service|
        create[:service] = service
      end
      opts.on_tail("-h", "--help", "Show help") do
        puts 'Create task definitions'
        puts opts
        exit
      end
   end
}

global.order!
command = ARGV.shift
subcommands[command].order!

@JOB_QUEUE_URL = ENV['JOB_QUEUE_URL']
@MONGO_URL = ENV['MONGO_URL']
@MONGO_DB_NAME = ENV['MONGO_DB_NAME']
@WORKER_ROLE_ARN = ENV['WORKER_ROLE_ARN']
@EXECUTION_ROLE_ARN = ENV['EXECUTION_ROLE_ARN']
@WORKER_REGISTRY_URI = ENV['WORKER_REGISTRY_URI']
@ADMIN_REGISTRY_URI = ENV['ADMIN_REGISTRY_URI']
@WEB_REGISTRY_URI = ENV['WEB_REGISTRY_URI']
@AWS_ACCESS_KEY_ID = ENV['AWS_ACCESS_KEY_ID']
@AWS_SECRET_ACCESS_KEY = ENV['AWS_SECRET_ACCESS_KEY']

def create_service(service_name)
    json_template = ''
    File.open("#{File.dirname(__FILE__)}/#{service_name}.json") do |f|
      json_template = f.read
    end
    json = ERB.new(json_template).result
    puts %x(aws ecs register-task-definition --cli-input-json '#{json}')
    puts %x(aws ecs update-service --cluster worker_ecs_cluster --service #{service_name}-service --task-definition #{service_name})
end

case command

when 'create'
  if create[:service]
    create_service(create[:service])
  else
    SERVICES.each do |t|
      create_service(t)
    end
  end
end



