#!/usr/bin/env ruby -w

require 'json'
require 'erb'
require 'open3'

SERVICES = Dir.glob("#{File.dirname(__FILE__)}/*.json").map { |f| File.basename(f, '.json') }

require 'optparse'

#options = {}

subtext = <<HELP
Commonly used command are:
   create
   create-log-groups
See 'deploy COMMAND --help' for more information on a specific command.
HELP

global = OptionParser.new do |opts|
  opts.banner = "Usage: deploy [options] [subcommand [options]]"
  opts.on("-h", "--help") do
    puts subtext
    exit
  end
end
#end.parse!

create = {}

subcommands = { 
   'create' => OptionParser.new do |opts|
      opts.banner = "Usage: create [OPTIONS]"
      opts.on("-s", "--service [SERVICE]") do |service|
        create[:service] = service
      end
      opts.on_tail("-h", "--help", "Show help") do
        puts 'Create task definitions'
        puts opts
        exit
      end
   end,

   'create-log-groups' => OptionParser.new do |opts|
      opts.banner = "Usage: create-log-groups"
      opts.on_tail("-h", "--help", "Show help") do
        puts 'Create aws Cloud Watch log groups'
        puts opts
        exit
      end
   end
}

global.order!
command = ARGV.shift
subcommands[command].order!

@JOB_QUEUE_URL = ENV['JOB_QUEUE_URL']
@MONGO_URL = ENV['MONGO_URL']
@MONGO_DB_NAME = ENV['MONGO_DB_NAME']
@WORKER_ROLE_ARN = ENV['WORKER_ROLE_ARN']
@EXECUTION_ROLE_ARN = ENV['EXECUTION_ROLE_ARN']
@WORKER_REGISTRY_URI = ENV['WORKER_REGISTRY_URI']
@WEB_REGISTRY_URI = ENV['WEB_REGISTRY_URI']

case command

when 'create'
  if create[:service]
    json_template = ''
    File.open("#{File.dirname(__FILE__)}/#{create[:service]}.json") do |f|
      json_template = f.read
    end
    json = ERB.new(json_template).result
    puts %x(aws ecs register-task-definition --cli-input-json '#{json}')
  else
    SERVICES.each do |t|
      json_template = ''
      File.open("#{File.dirname(__FILE__)}/#{t}.json") do |f|
        json_template = f.read
      end
      json = ERB.new(json_template).result
      json = JSON::fast_generate(JSON::parse(json))

      command = ['aws', '--profile', 'batman', 'ecs', 'register-task-definition', '--cli-input-json', json]

      Open3.popen3(*command) do |stdin, stdout, stderr, wait_thr|
        # calling wait_thr.value blocks until command is complete
        if wait_thr.value.success?
          puts "Command completed successfully"
        else
          puts "Error running command: '#{command.join(' ')}'"
          puts "stdout: #{stdout.read}"
          puts "stderr: #{stderr.read}"
        end
      end
    end
  end

when 'create-log-groups'
  puts %x(aws logs create-log-group --log-group-name awslogs-web)
  puts %x(aws logs create-log-group --log-group-name awslogs-worker)
end



